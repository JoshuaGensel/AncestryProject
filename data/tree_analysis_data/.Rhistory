separate(part_sex, c(part, sex)) %>%
print
# find detailed in 'Special functions' section of ?select.
#
# 2. gather() all columns EXCEPT score_range, using
# key = part_sex and value = count.
#
# 3. separate() part_sex into two separate variables (columns),
# called "part" and "sex", respectively. You may need to check
# the 'Examples' section of ?separate to remember how the 'into'
# argument should be phrased.
#
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
print
submit()
submit()
#
# 1. Use group_by() (from dplyr) to group the data by part and
# sex, in that order.
#
# 2. Use mutate to add two new columns, whose values will be
# automatically computed group-by-group:
#
#   * total = sum(count)
#   * prop = count / total
#
sat %>%
select(-contains("total")) %>%
gather(part_sex, count, -score_range) %>%
separate(part_sex, c("part", "sex")) %>%
group_by(part, sex) %>%
mutate(total = sum(count),
prop = count / total
) %>% print
submit()
submit()
library()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
today
today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 18, minutes = 26, seconds = 55)
this_moment
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- departed + hours(15) + minutes(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?llines
?splom
?trellis.par.set
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g = ggplot()
print(g)
View(g)
View(g)
?qplot
library(swirl)
swirl()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col =  unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col =  unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdsit)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust <- kmeans(sub1[,-1:2], centers = 6)
kclust <- kmeans(sub1[,-(1:2)], centers = 6)
kclust <- kmeans(sub1[,1:2], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(p,0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0 <- make.names(cnames[[1]][wcol]))
names(pm0) <- make.names(cnames[[1]][wcol]))
names(pm0) <- make.names(cnames[[1]][wcol])
haed(pm0)
head(pm0)
x0 <- pm0$Sample.Value
pm0
exit()
0
x0 <- pm0$Sample.Value
pm0 <- read.table(my1999)
pm0
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <-x1<0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cmt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch  = 20)
abline(median(x0sub, na.rm = TRUE), lwd = 2)
abline(median(x0sub, na.rm = TRUE), 0, lwd = 2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch  = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code. mean, na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mgr)
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2],rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
library(swirl)
swirl()
33/36
deck
52
4/52
0
12/52
2/51
1.6*0.8*0.5
1.6*0.8*0.5
mypdf
integrate(mypdf, 0, 1.6)
(1^2)/4
sqrt(2)
library(swirl)
swirl()
0.997*0.001
(1-0.985)*(1-0.001)
0.997*0.001 / ( 0.997*0.001 + (1-0.985)*(1-0.001) )
3.5
expect_dice()
?expect_dice()
?expect_dice(rep(1/6, 6))
expect_dice(rep(1/6, 6))
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
(edh+edl)/2
integrate(myfunc, 0, 2)
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
(0.06/0.12)*0.12+0.17*(1-0.12)
0.17*0.17
0.12*0.06+(1-0.12)*0.17
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
1*0.1+2*0.2+3*0.3+4*0.4
0.75*0.3
1-0.52
0.225/(0.225 + 0.48*0.7)
library(swirl)
swirl()
dice_sqr
sum(dice_sqr*dice_fair)
ex2_fair <- sum(dice_fair * dice_sqr)
ex2_fair-3.5^2
sum(dice_high*dice_sqr)-edh^2
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
choose(5,3) * .8^3 * (1-.8)^(5-3)
choose(5,3) * .8^3 * (1-.8)^(5-3)+choose(5,4) * .8^4 * (1-.8)^(5-4)+choose(5,5) * .8^5 * (1-.8)^(5-5)
pbinom(2,5,.8,lower.tail = FALSE)
qnorm(.1)
0
qnorm(p = .975, mean = 3, sd = 2)
qnorm(p = .975, mean = 3, sd = 2)*2+3
1.96*2 + 3
pnorm(1200,1020,50,lower.tail = FALSE)
pnorm((1200-1020)/50,lower.tail = FALSE)
qnorm(.75,1020,50)
.53
.53
ppois(3,2.5*4)
pbinom(5,1000,.01)
ppois(5,1000*0.01)
coinPlot(10)
coinPlot(10000)
qnorm(.95)
.6 + C(-qnorm(.975)*sqrt(.6*(1-.6)/100),qnorm(.975)*sqrt(.6*(1-.6)/100))
.6 + C(-qnorm(.975)*sqrt(.6*(1-.6)/100),qnorm(.975)*sqrt(.6*(1-.6)/100))
-qnorm(0.975) * sqrt(0.6 * (1 - 0.6)/100)
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5,94.32)$conf.int
poisson.test(5,94.32)$conf
pnorm(70,80,10)
qnorm(.95,1100,75)
qnorm(0.975)*75/sqrt(100)
pnorm(0.975)*75/sqrt(100)
1100 + qnorm(0.975)*75/sqrt(100)
1100 + qnorm(0.95)*75/sqrt(100)
pbinom(4,5,.5)
?pbinom
pbinom(4,5,.5,lower.tail = FALSE)
15 + qnorm(0.975)*10/sqrt(100)
15 - qnorm(0.975)*10/sqrt(100)
15 - qnorm(0.95)*10/sqrt(100)
15 + qnorm(0.95)*10/sqrt(100)
ppois(10,5*3)
?pbinom
pbinom(4,5,.5,lower.tail = FALSE)
pbinom(4,5,.5)
qbinom(.19,5,.5)
qbinom(.12,5,.5)
qbinom(.13,5,.5)
qbinom(.03,5,.5)
qbinom(.06,5,.5)
qbinom(.12,5,.5,lower.tail = FALSE)
pbinom(4,5,.5,lower.tail = FALSE)
pnorm(16, mean = 15, sd = 10/sqrt(100))-pnorm(14, mean = 15, sd = 10/sqrt(100))
library(swirl)
swirl()
myplot(2)
myplot(20)
myplot2(2)
qt(.975,2)
myplot2(20)
sleep
range(g1)
range(g2)
g2-g1
difference <- g2-g1
mean(difference)
s <- sd(difference)
mn + c(1,-1)*qt(.975,9)*(s/sqrt(10))
mn + c(-1,1)*qt(.975,9)*s/sqrt(10)
t.test(difference)$conf.int
sp <- (8-1)(15.34)^2+(21-1)(18.23)^2
sp <- (8-1)*(15.34)^2+(21-1)*(18.23)^2
ns <- 7+20
sp <- sqrt(sp/ns)
(132.86-127.44)*c(1,-1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
132.86-127.44+c(-1,1)*qt(.975,ns)*sp*sqrt(1/8+1/21)
sqrt((var(g1)*9+var(g2)*9)/18)
sp <- sqrt((9*var(g1)+9*var(g2))/18)
md+c(1,-1)*sp*sqrt(.1+.1)
md + c(-1,1)*qt(.975,18)*sp*sqrt(1/5)
t.test(g2,g1,paired = FALSE,var.equal = TRUE)$conf.int
t.test(g2,g1,paired=FALSE,var.equal=TRUE)$conf
t.test(g2,g1,paired = TRUE)$conf
(15.34^2/8+18.23^2/21)^2
num <- (15.34^2/8 + 18.23^2/21)^2
2
den <- 15.34^4/8^2/7 + 18.23^4/21^2/20
mydf <- num/den
2
132.86-127.44 +c(-1,1)*qt(.975,mydf)*sqrt(15.34^2/8 + 18.23^2/21)
10/sqrt(100)
2
2/(10/sqrt(16))
15
qt(.95,15)
dim(fs)
t.test(fs$sheight,fs$fheight,paired = TRUE)
11.7885 * sd(fs$sheight-fs$fheight)/sqrt(1078)
mybin
7
6
8
pt(2.5,15,lower.tail = FALSE)
qnorm(.95)
qnorm(.99)
pnorm(2)
pnorm(2,lower.tail = FALSE)
mybin
pbinom(6,8,.5,lower.tail = FALSE)
pbinom(7,8,.5,lower.tail = TRUE)
ppois(9,5,lower.tail = FALSE)
?t.test
1100+c(1,-1)*qt(.95,8)*(30/sqrt(9))
1100+c(-1,1)*qt(.95,8)*(30/sqrt(9))
1100+c(-1,1)*qt(.975,8)*(30/sqrt(9))
-2+c(-1,1)*qt(.975,8)*(2.6/sqrt(9))
-2+c(-1,1)*qt(.975,8)*(.3/sqrt(9))
-2+c(-1,1)*qt(.975,8)*(1.5/sqrt(9))
-2+c(-1,1)*qt(.975,8)*(2.1/sqrt(9))
-2+c(-1,1)*qt(.975,18)*(.68^2/10+.6^2/10)
5
-2+c(-1,1)*qt(.95,8)*(2.1/sqrt(9))
-2+c(-1,1)*qt(.95,18)*(.68^2/10+.6^2/10)
-2+c(-1,1)*qt(.95,19)*(.68^2/10+.6^2/10)
-2+c(-1,1)*qt(.975,19)*(.68^2/10+.6^2/10)
-2+c(-1,1)*qt(.975,18)*sqrt((.68^2/10+.6^2/10))
-2+c(-1,1)*qt(.95,18)*sqrt((.68^2/10+.6^2/10))
-2+c(-1,1)*qt(.975,19)*sqrt((.68^2/10+.6^2/10))
3-5+c(-1,1)*qt(.975,19)*sqrt((.68^2/10+.6^2/10))
3-5+c(-1,1)*qt(.95,19)*sqrt((.68^2/10+.6^2/10))
3-5+c(-1,1)*qt(.95,18)*sqrt((.68^2/10+.6^2/10))
3-5+c(-1,1)*qt(.975,18)*sqrt((.68^2/10+.6^2/10))
3-5+c(-1,1)*qt(.95,19)*sqrt((1/10+1/10))
3-5+c(-1,1)*qt(.975,19)*sqrt((1/10+1/10))
3-5+c(-1,1)*qt(.95,18)*sqrt((1/10+1/10))
3-5+c(-1,1)*qnorm(.95)*sqrt((1/10+1/10))
3-5+c(-1,1)*qnorm(.975)*sqrt((1/10+1/10))
3-5+c(-1,1)*qnorm(.95)*sqrt((1/10+1/10))
3-5+c(-1,1)*qt(.95,18)*sqrt((9*.68^2+9*.6^2)/(18))*sqrt((1/10+1/10))
3-5+c(-1,1)*qt(.975,18)*sqrt((9*.68^2+9*.6^2)/(18))*sqrt((1/10+1/10))
6-4+c(-1,1)*qt(.975,198)*sqrt((.5^2/100+2^2/100))
-3-1+c(-1,1)*qt(.9,16)*sqrt((8*1.5^2+8*1.8^2)/(16))*sqrt((1/9+1/9))
-3-1+c(-1,1)*qt(.9,17)*sqrt((8*1.5^2+8*1.8^2)/(16))*sqrt((1/9+1/9))
3-5+c(-1,1)*qt(.975,18)*sqrt((1/10+1/10))
3-5+c(-1,1)*qt(.975,18)*sqrt((9*.68^2+9*.6^2)/(18))*sqrt((1/10+1/10))
library(tidyverse)
library(ggplot2)
setwd("D:/Daten/programming_projects/AncestryProject/data/tree_analysis_data")
treedata_Y <- read_csv("treedata_Y.csv", col_names = FALSE)
treedata_M <- read.csv("treedata_M.csv", header = FALSE)
View(treedata_M)
View(treedata_Y)
colnames(treedata_Y) <- strsplit(read_lines("headers.txt"), split = ",")[[1]]
colnames(treedata_M) <- strsplit(read_lines("headers.txt"), split = ",")[[1]]
View(treedata_M)
View(treedata_Y)
View(treedata_M)
ggplot(treedata, aes(x = as.factor(TD), y = G_NO_INFO)) +
geom_boxplot()
ggplot(treedata_Y, aes(x = as.factor(TD), y = G_NO_INFO)) +
geom_boxplot()
ggplot(treedata_Y, aes(x = as.factor(TD), y = G_FALSE)) +
geom_boxplot()
ggplot(treedata_Y, aes(x = as.factor(TD), y = G_UNKNOWN)) +
geom_boxplot()
ggplot(treedata_Y, aes(x = as.factor(TD), y = TRUE_P1-G_P1)) +
geom_boxplot()
ggplot(treedata_Y, aes(x = as.factor(TD), y = INIT_P1-G_P1)) +
geom_boxplot()
ggplot(treedata_Y, aes(x = as.factor(TD), y = TRUE_P1-G_P1)) +
geom_boxplot()
treedata_Y <- read.csv("treedata_Y.csv", header = FALSE)
treedata_M <- read.csv("treedata_M.csv", header = FALSE)
treedata <- rbind(treedata_M,treedata_Y)
colnames(treedata) <- strsplit(read_lines("headers.txt"), split = ",")[[1]]
View(treedata)
ggplot(treedata, aes(x = as.factor(TD), y = G_NO_INFO)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TD), y = G_FALSE)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TD), y = G_UNKNOWN)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TD), y = TRUE_P1-G_P1)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TD), y = INIT_P1-G_P1)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TD), y = TRUE_P1-G_P1)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TA), y = G_NO_INFO)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TA), y = G_FALSE)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TA), y = G_NO_INFO)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TA), y = G_FALSE)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TA), y = G_UNKNOWN)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(TA), y = TRUE_P1-G_P1)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(NS), y = G_NO_INFO)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(NS), y = G_FALSE)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(NS), y = G_UNKNOWN)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(NS), y = G_FALSE)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(NS), y = TRUE_P1-G_P1)) +
geom_boxplot()
ggplot(treedata, aes(x = as.factor(NS), y = INIT_P1-G_P1)) +
geom_boxplot()
